name: PR Code Quality Check

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Run linters and type checks
    runs-on: ubuntu-latest
    concurrency:
      group: pr-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install black flake8 isort mypy

      - name: Run Black
        id: black
        run: |
          black --check --diff --quiet . | grep "would reformat" | awk '{print $3}' > black_output.txt || true
        continue-on-error: true

      - name: Run Flake8
        id: flake8
        run: |
          flake8 . 2>&1 | tee flake8_output.txt
        continue-on-error: true

      - name: Run isort
        id: isort
        run: |
          isort --check-only . 2>&1 | tee isort_output.txt
        continue-on-error: true

      - name: Run mypy
        id: mypy
        run: |
          mypy . 2>&1 | tee mypy_output.txt
        continue-on-error: true

      - name: Collect Linter Errors
        run: |
          echo "## Code quality checks failed!" > lint_errors.md
          for tool in black flake8 isort mypy; do
            if [ -s ${tool}_output.txt ]; then
              echo "<details><summary>${tool^} Errors</summary>" >> lint_errors.md
              echo '```' >> lint_errors.md
              cat ${tool}_output.txt >> lint_errors.md
              echo '```' >> lint_errors.md
              echo "</details>" >> lint_errors.md
            fi
          done
          echo "Please fix these issues before merging." >> lint_errors.md

      - name: Post Comment on PR
        if: always()
        uses: mshick/add-pr-comment@v2
        with:
          message-path: lint_errors.md
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail the job if any check fails
        run: |
          grep -q 'error' black_output.txt && exit 1 || true
          grep -q 'error' flake8_output.txt && exit 1 || true
          grep -q 'error' isort_output.txt && exit 1 || true
          grep -q 'error' mypy_output.txt && exit 1 || true